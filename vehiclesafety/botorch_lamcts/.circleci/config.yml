version: 2.1

commands:

  pip_install:
    description: "Install dependencies via pip"
    parameters:
      args:
        type: string
        default: ""
    steps:
      - run:
          name: "Install dependencies via pip"
          command: ./scripts/install_via_pip.sh << parameters.args >>

  conda_install:
    description: "Install dependencies via conda"
    parameters:
      args:
        type: string
        default: ""
    steps:
      - run:
          name: "Install dependencies via conda"
          command: ./scripts/install_via_conda.sh << parameters.args >>

  lint_flake8:
    description: "Lint with flake8"
    steps:
      - run:
          name: "Lint with flake8"
          command: flake8

  lint_black:
    description: "Lint with black"
    steps:
      - run:
          name: "Lint with black"
          command: black --check --diff .

  unit_tests:
    description: "Run unit tests"
    steps:
      - run:
          name: "Run unit tests"
          command: pytest -ra --cov=. --cov-report term-missing

  sphinx:
    description: "Run sphinx"
    steps:
      - run:
          name: "Run sphinx"
          command: sphinx-build -WT --keep-going sphinx/source sphinx/build

  sphinx_coverage:
    description: "Validate sphinx coverage"
    steps:
      - run:
          name: "Validate sphinx coverage"
          command: python scripts/validate_sphinx.py -p "$(pwd)"

  run_tutorials:
    description: "Run tutorials"
    steps:
      - run:
          name: "Run tutorials"
          command: python scripts/run_tutorials.py -p "$(pwd)"

  configure_docusaurus_bot:
    description: "Configure Docusaurus GitHub bot"
    steps:
      - run:
          name: "Configure Docusaurus GitHub bot"
          # Do not do this if we don't have the right org (pytorch), or if this is just a PR
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME == "pytorch" && -z $CI_PULL_REQUEST && -z $CIRCLE_PR_USERNAME ]]; then
              git config --global user.email "docusaurus-bot@users.noreply.github.com"
              git config --global user.name "BoTorch website deployment script"
              echo "machine github.com login docusaurus-bot password $GITHUB_TOKEN" > ~/.netrc
            fi

  deploy_site:
    description: "Deploy website to GitHub Pages"
    steps:
      - run:
          name: "Deploy website to GitHub Pages"
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME == "pytorch" && -z $CI_PULL_REQUEST && -z $CIRCLE_PR_USERNAME ]]; then
              ./scripts/publish_site.sh -d
            else
              echo "Skipping deploy."
            fi

  upload_coverage:
    description: "Upload coverage report to codecov.io"
    steps:
      - run:
          name: "Upload coverage report"
          command: bash <(curl -s https://codecov.io/bash)

  test_packaging:
    description: "Test packaging (python sdist and wheel, conda package)"
    steps:
       - run:
          name: "Build packages"
          command: ./scripts/test_packaging.sh


jobs:

  lint_test_py38_pip:
    docker:
      - image: circleci/python:3.8
    resource_class: large
    steps:
      - checkout
      - pip_install:
          args: "-n"
      - lint_flake8
      - lint_black
      - unit_tests
      - sphinx
      - sphinx_coverage
      - upload_coverage

  lint_test_py37_conda:
    docker:
      - image: continuumio/miniconda3
    resource_class: large
    steps:
      - checkout
      - conda_install:
          args: "-n"
      - lint_flake8
      - lint_black
      - unit_tests
      - sphinx
      - sphinx_coverage
      - upload_coverage

  run_tutorials_py38_pip:
    docker:
      - image: circleci/python:3.8
    resource_class: large
    steps:
      - checkout
      - pip_install:
          args: "-n -d -t"
      - run_tutorials

  auto_deploy_site:
    docker:
      - image: circleci/python:3.8-node
    steps:
      - checkout
      - pip_install:
          args: "-n -d"
      - lint_flake8
      - lint_black
      - unit_tests
      - sphinx
      - configure_docusaurus_bot
      - deploy_site

  package:
    docker:
      - image: continuumio/miniconda3
    resource_class: large
    steps:
      - checkout
      - test_packaging


aliases:

  - &exclude_ghpages_fbconfig
    branches:
      ignore:
        - gh-pages
        - fb-config


workflows:

  lint_and_test:
    jobs:
      - lint_test_py38_pip:
          filters: *exclude_ghpages_fbconfig
      - lint_test_py37_conda:
          filters: *exclude_ghpages_fbconfig
      - run_tutorials_py38_pip:
          filters: *exclude_ghpages_fbconfig

  package:
    triggers:
      - schedule:
          cron: "0 9 * * *" # UTC
          filters:
            branches:
              only:
                - master
    jobs:
      - package
          
  auto_deploy_site:
    triggers:
      - schedule:
          cron: "0 8 * * *" # UTC
          filters:
            branches:
              only:
                - master
    jobs:
      - auto_deploy_site
